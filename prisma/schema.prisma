generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstName String
  lastName  String
  password  String
  role      UserRole  @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  calendar  Calendar?
  tasks     Task[]

  @@index([email])
}

model Event {
  id         Int       @id @default(autoincrement())
  title      String
  start      DateTime
  end        DateTime?
  allDay     Boolean   @default(false)
  notes      String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  calendarId Int
  color      String?   @default("#3788d8")
  calendar   Calendar  @relation(fields: [calendarId], references: [id], onDelete: Cascade)

  @@index([calendarId])
}

model Calendar {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  title     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  events    Event[]

  @@index([userId])
}

enum TaskStatus {
  PLANNED
  IN_PROGRESS
  ON_HOLD
  DONE
}

model Task {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  dueDate     DateTime?
  status      TaskStatus @default(PLANNED)
  progress    Int        @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      Int
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([status])
}